version: "3.9"

services:
  db_postgres:
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: bookhive
    ports:
      - "5432:5432"
    volumes:
      - bookhive-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d bookhive" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - mynet
    build:
      context: ./postgres
      dockerfile: ./Dockerfile
      shm_size: 256mb
    shm_size: 512mb
  setup:
    build:
      context: ./setuper
      dockerfile: ./Dockerfile
    networks:
      - mynet
    volumes:
      - ./config.json:/app/config.json
    depends_on:
      db_postgres:
        condition: service_healthy
  backend:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    networks:
      - mynet
    volumes:
      - ./config.json:/app/config.json
    depends_on:
      db_postgres:
        condition: service_healthy
      setup:
        condition: service_completed_successfully
    ports:
      - "8080:8080"
  ml:
    build:
      context: ./ml
      dockerfile: ./Dockerfile
    networks:
      - mynet
    volumes:
      - ./config.json:/app/config.json
    depends_on:
      db_postgres:
        condition: service_healthy
      setup:
        condition: service_completed_successfully
    ports:
      - "8090:8090"
  nginx-client:
    build:
      context: ./client
      dockerfile: ./Dockerfile
    networks:
      - mynet
    volumes:
      - ./config.json:/app/src/cfg/config.json
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      backend:
        condition: service_started
    ports:
      - "80:80"

networks:
  mynet:
    driver: bridge

volumes:
  bookhive-data: