version: "3.9"

services:
  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    environment:
      DOZZLE_LEVEL: debug
      DOZZLE_USERNAME: {{ dozzle_username }}
      DOZZLE_PASSWORD: {{ dozzle_password }}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:8080
    networks:
      - mynet
  db_postgres:
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: {{ postgres_user }}
      POSTGRES_PASSWORD: {{ postgres_password }}
      POSTGRES_DB: {{ postgres_database }}
    volumes:
      - bookhive-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U {{ postgres_user }} -d {{ postgres_database }}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - mynet
    build:
      context: ./postgres
      dockerfile: ./Dockerfile
      shm_size: 256mb
    shm_size: 512mb
  setup:
    build:
      context: ./setuper
      dockerfile: ./Dockerfile
    networks:
      - mynet
    volumes:
      - ./config.json:/app/config.json
    depends_on:
      db_postgres:
        condition: service_healthy
  backend:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    networks:
      - mynet
    volumes:
      - ./config.json:/app/config.json
    depends_on:
      db_postgres:
        condition: service_healthy
      setup:
        condition: service_completed_successfully
    ports:
      - "{{ backend_port }}:{{ backend_port }}"
  ml:
    build:
      context: ./ml
      dockerfile: ./Dockerfile
    networks:
      - mynet
    volumes:
      - ./config.json:/app/config.json
    depends_on:
      db_postgres:
        condition: service_healthy
      setup:
        condition: service_completed_successfully
    ports:
      - "{{ ml_port }}:{{ ml_port }}"
  nginx-client:
    build:
      context: ./client
      dockerfile: ./Dockerfile
    networks:
      - mynet
    volumes:
      - ./config.json:/app/src/cfg/config.json
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      backend:
        condition: service_started
    ports:
      - "{{ nginx_listen_port }}:{{ nginx_listen_port }}"

networks:
  mynet:
    driver: bridge

volumes:
  bookhive-data: